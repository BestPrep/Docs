{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to BestPrep's Documentation Site","text":"<p>Welcome to BestPrep's Salesforce Documentation site. Please reference any projects in this system before making changes on the actual Salesforce site. </p> <p>Commonly requested links:</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"mentoring/","title":"Home","text":"<p>Welcome to BestPrep's Salesforce Documentation site. Please reference any projects in this system before making changes on the actual Salesforce site. </p> <p>Commonly requested links:</p>"},{"location":"mentoring/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"mentoring/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"mentoring_apex/","title":"Mentoring Sites - Apex Code","text":"<p>Every single </p>"},{"location":"mentoring_apex/#mentoringmentorportalcls","title":"MentoringMentorPortal.cls","text":"<pre><code>global without sharing class MentoringMentorPortal {\n\n    @AuraEnabled\n    public static Map&lt;String, Object&gt; getConnectionData(Id connectionId, String passkey) {\n        Connection__c conn = [\n            SELECT Id, Connection_Passkey__c, Connection_Type__c, Mentor_Out_of_Office__c,\n                   Student_Familiar_Name__c, Mentor_Familiar_Name__c, Mentor_Full_Name__c,\n                   Track__c, Mentor_VAF_Date__c, Mentor_Email__c,\n                   Case__r.Id,\n                   Case__r.Owner.Email,\n                   Case__r.ParentId,\n                   Case__r.Assigned_Company__r.Preferred_Recognition__c,\n                   Case__r.Assigned_School__r.Preferred_Recognition__c,\n                   Case__r.Celebration_Date__c,\n                   Case__r.Celebration_Start_Time__c,\n                   Case__r.Celebration_End_Time__c,\n                   Case__r.Meet_And_Greet_Location_Address__c,\n                   Case__r.CC_Date_1__c, Case__r.CC_Date_2__c, Case__r.CC_Date_3__c, Case__r.CC_Date_4__c,\n                   Case__r.CC_Date_5__c, Case__r.CC_Date_6__c, Case__r.CC_Date_7__c, Case__r.CC_Date_8__c,\n                   Case__r.GQ_1__r.Name, Case__r.GQ_1__r.Mentor_Talking_Points__c, Case__r.GQ_1__r.Enable_Attachments__c,\n                   Case__r.GQ_2__r.Name, Case__r.GQ_2__r.Mentor_Talking_Points__c, Case__r.GQ_2__r.Enable_Attachments__c,\n                   Case__r.GQ_3__r.Name, Case__r.GQ_3__r.Mentor_Talking_Points__c, Case__r.GQ_3__r.Enable_Attachments__c,\n                   Case__r.GQ_4__r.Name, Case__r.GQ_4__r.Mentor_Talking_Points__c, Case__r.GQ_4__r.Enable_Attachments__c,\n                   Case__r.GQ_5__r.Name, Case__r.GQ_5__r.Mentor_Talking_Points__c, Case__r.GQ_5__r.Enable_Attachments__c,\n                   Case__r.GQ_6__r.Name, Case__r.GQ_6__r.Mentor_Talking_Points__c, Case__r.GQ_6__r.Enable_Attachments__c,\n                   Case__r.GQ_7__r.Name, Case__r.GQ_7__r.Mentor_Talking_Points__c, Case__r.GQ_7__r.Enable_Attachments__c,\n                   Case__r.Activity_GQ__r.Name, Case__r.Activity_GQ__r.Mentor_Talking_Points__c, Case__r.Activity_GQ__r.Enable_Attachments__c\n            FROM Connection__c\n            WHERE Id = :connectionId\n            LIMIT 1\n        ];\n\n        if (conn.Connection_Passkey__c != passkey) {\n            throw new AuraHandledException('Invalid Passkey');\n        }\n\n        // Determine which Case to use for coordinator query\n        Id coordinatorCaseId = conn.Connection_Type__c == 'Cloud Coach'\n            ? conn.Case__r.ParentId\n            : conn.Case__c;\n\n        // Get all coordinators for that Case\n        List&lt;BestPrep_Program_Participation__c&gt; coordinatorRecords = [\n            SELECT Role__c, Contact__r.Email\n            FROM BestPrep_Program_Participation__c\n            WHERE Case_Number__c = :coordinatorCaseId\n            AND Role__c = 'Company Coordinator'\n        ];\n\n        // Extract just the email addresses\n        List&lt;String&gt; coordinatorEmails = new List&lt;String&gt;();\n        for (BestPrep_Program_Participation__c bppp : coordinatorRecords) {\n            if (bppp.Contact__r.Email != null) {\n                coordinatorEmails.add(bppp.Contact__r.Email);\n            }\n        }\n\n        // Get messages\n        List&lt;Message__c&gt; messages = [\n            SELECT Id, Week__c, Role__c, Message__c, Filter_Status__c, CreatedDate, Link_to_File_Attached__c\n            FROM Message__c\n            WHERE Connection__c = :connectionId\n        ];\n\n        // Prepare talking points\n        Map&lt;String, Object&gt; talkingPoints = new Map&lt;String, Object&gt;{\n            'Week 1' =&gt; buildTP('Week 1', conn.Case__r.CC_Date_1__c, conn.Case__r.GQ_1__r),\n            'Week 2' =&gt; buildTP('Week 2', conn.Case__r.CC_Date_2__c, conn.Case__r.GQ_2__r),\n            'Week 3' =&gt; buildTP('Week 3', conn.Case__r.CC_Date_3__c, conn.Case__r.GQ_3__r),\n            'Week 4' =&gt; buildTP('Week 4', conn.Case__r.CC_Date_4__c, conn.Case__r.GQ_4__r),\n            'Week 5' =&gt; buildTP('Week 5', conn.Case__r.CC_Date_5__c, conn.Case__r.GQ_5__r),\n            'Week 6' =&gt; buildTP('Week 6', conn.Case__r.CC_Date_6__c, conn.Case__r.GQ_6__r),\n            'Week 7' =&gt; buildTP('Week 7', conn.Case__r.CC_Date_7__c, conn.Case__r.GQ_7__r),\n            'Week 8' =&gt; buildTP('Week 8', conn.Case__r.CC_Date_8__c, conn.Case__r.Activity_GQ__r)\n        };\n\n        return new Map&lt;String, Object&gt;{\n            'connection' =&gt; conn,\n            'messages' =&gt; messages,\n            'talkingPoints' =&gt; talkingPoints,\n            'companyCoordinators' =&gt; coordinatorEmails\n        };\n    }\n\n    private static Map&lt;String, Object&gt; buildTP(String week, Date d, eMentors_GQ__c gq) {\n        if (gq == null) {\n            return new Map&lt;String, Object&gt;{\n                'week' =&gt; week,\n                'dueDate' =&gt; '',\n                'title' =&gt; 'No topic for this week.',\n                'talkingPoints' =&gt; ''\n            };\n        }\n\n        return new Map&lt;String, Object&gt;{\n            'week' =&gt; week,\n            'dueDate' =&gt; d != null ? d.format() : '',\n            'title' =&gt; gq.Name,\n            'talkingPoints' =&gt; gq.Mentor_Talking_Points__c,\n            'enableAttachments' =&gt; gq.Enable_Attachments__c\n        };\n    }\n\n\n\n    @AuraEnabled\n    public static void upsertMentorMessage(Id connectionId, String week, String messageBody, String passkey) {\n        upsertMessage(connectionId, week, 'Mentor', messageBody, passkey);\n    }\n\n    private static void upsertMessage(Id connectionId, String week, String role, String messageBody, String passkey) {\n        Connection__c conn = [\n            SELECT Id, Connection_Passkey__c\n            FROM Connection__c\n            WHERE Id = :connectionId\n        ];\n\n        if (conn.Connection_Passkey__c != passkey) {\n            throw new AuraHandledException('Invalid credentials');\n        }\n\n        Message__c msg;\n        List&lt;Message__c&gt; existing = [\n            SELECT Id\n            FROM Message__c\n            WHERE Connection__c = :connectionId AND Week__c = :week AND Role__c = :role\n        ];\n        if (!existing.isEmpty()) {\n            msg = existing[0];\n            msg.Message__c = messageBody;\n            msg.Filter_Status__c = 'Flag - New';\n            update msg;\n        } else {\n            msg = new Message__c(\n                Connection__c = connectionId,\n            Week__c = week,\n            Role__c = role,\n            Message__c = messageBody,\n            Filter_Status__c = 'Flag - New',\n            OwnerId = UserInfo.getUserId()\n                );\n            insert msg;\n        }\n    }\n\n    @AuraEnabled\n    public static void upsertMentorMessageWithFile(\n        Id connectionId,\n    String week,\n    String messageBody,\n    String passkey,\n    String fileName,\n    String base64FileContent\n    ) {\n        // Validate connection credentials\n        Connection__c conn = [\n        SELECT Id, Connection_Passkey__c\n        FROM Connection__c\n        WHERE Id = :connectionId\n    ];\n\n        if (conn.Connection_Passkey__c != passkey) {\n            throw new AuraHandledException('Invalid credentials');\n        }\n\n        // Upsert the mentor's message\n        Message__c msg;\n        List&lt;Message__c&gt; existing = [\n        SELECT Id\n        FROM Message__c\n        WHERE Connection__c = :connectionId AND Week__c = :week AND Role__c = 'Mentor'\n    ];\n        if (!existing.isEmpty()) {\n            msg = existing[0];\n            msg.Message__c = messageBody;\n            msg.Filter_Status__c = 'Flag - New';\n            update msg;\n        } else {\n            msg = new Message__c(\n                Connection__c = connectionId,\n            Week__c = week,\n            Role__c = 'Mentor',\n            Message__c = messageBody,\n            Filter_Status__c = 'Flag - New'\n                //,OwnerId = UserInfo.getUserId()\n            );\n            insert msg;\n        }\n\n        // Upload and link file (if provided)\n        if (!String.isBlank(fileName) &amp;&amp; !String.isBlank(base64FileContent)) {\n            ContentVersion cv = new ContentVersion(\n                Title = fileName,\n            PathOnClient = fileName,\n            VersionData = EncodingUtil.base64Decode(base64FileContent)\n                );\n            insert cv;\n\n            ContentVersion inserted = [\n            SELECT Id, ContentDocumentId\n            FROM ContentVersion\n            WHERE Id = :cv.Id\n        ];\n\n            insert new ContentDocumentLink(\n                ContentDocumentId = inserted.ContentDocumentId,\n            LinkedEntityId = msg.Id,\n            ShareType = 'V',\n            Visibility = 'AllUsers'\n                );\n\n            System.enqueueJob(new FileAttachQueueable(msg.Id));\n        }\n\n    }\n\n    @AuraEnabled\n    public static void updateOutOfOfficeWeeks(Id connectionId, String passkey, String weeks, String track) {\n        Connection__c conn = [\n        SELECT Id, Connection_Passkey__c\n        FROM Connection__c\n        WHERE Id = :connectionId\n    ];\n\n        if (conn.Connection_Passkey__c != passkey) {\n            throw new AuraHandledException('Invalid credentials');\n        }\n\n        conn.Mentor_Out_of_Office__c = weeks;\n        conn.Track__c = track;\n        update conn;\n    }\n\n\n\n    @AuraEnabled\n    public static void submitVolunteerAgreement(Id connectionId, String passkey, String pronouns, String ethnicity) {\n        Connection__c conn = [\n            SELECT Id, Connection_Passkey__c, Mentor_BPPP__r.Contact__c\n            FROM Connection__c\n            WHERE Id = :connectionId\n        ];\n\n        if (conn.Connection_Passkey__c != passkey) {\n            throw new AuraHandledException('Invalid credentials');\n        }\n\n        Id contactId = conn.Mentor_BPPP__r.Contact__c;\n        if (contactId == null) {\n            throw new AuraHandledException('Mentor contact not found.');\n        }\n\n        Contact c = [SELECT Id FROM Contact WHERE Id = :contactId];\n        c.Pronouns__c = pronouns;\n        c.Ethnicity__c = ethnicity;\n        c.Volunteer_Agreement_Date__c = Date.today();\n        update c;\n    }\n}\n</code></pre>"},{"location":"mentoring_js/","title":"Mentoring Code","text":"<p>Welcome to BestPrep's Salesforce Documentation site. Please reference any projects in this system before making changes on the actual Salesforce site. </p> <p>Commonly requested links:</p>"},{"location":"mentoring_js/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"mentoring_js/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"}]}